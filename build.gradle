group 'jp.co.soramitsu.iroha'
version '1.0'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'application'

mainClassName  = 'jp.co.soramitsu.App'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE'
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
    }
}

task uberjar(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from {configurations.compile.collect {zipTree(it)}} {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }

    manifest {
        attributes 'Main-Class': 'jp.co.soramitsu.App'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

def grpcVersion = '1.7.0'

dependencies {
    // GRPC
    compile "com.google.api.grpc:proto-google-common-protos:0.1.9"
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.16.18'

    // RxJava
    compile "io.reactivex.rxjava2:rxjava:2.1.5"

    // EdDSA
    compile 'net.i2p.crypto:eddsa:0.2.0'

    // SHA 3
    compile 'org.bouncycastle:bcprov-jdk15on:1.58'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.4.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'
            }
        }
    }
}

// Inform IntelliJ projects about the generated code.
apply plugin: 'idea'

idea {
    module {
        // Not using generatedSourceDirs because of
        // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
    }
}